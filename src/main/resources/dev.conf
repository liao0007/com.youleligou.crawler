include "application.conf"

cache {
  #redis config
  redis {
    host = localhost
    port = 6379
    password = 19901008Zjj
  }
}

spark {
  appName = ${appName}
  master = "spark://192.168.1.100:7077"
  dependentJar = [
    "/Users/liangliao/Desktop/com.youleligou.crawler/target/scala-2.11/com.youleligou.crawler-assembly-1.0-SNAPSHOT.jar"
  ]
}

crawler.meituan.job.poiFilter.interval = 250 //mills
crawler.fetch.useProxy = true
crawler.fetch.proxy = "proxy.abuyun"

akka {
  log-config-on-start = off

  loglevel = "DEBUG"
  log-dead-letters = 10
  log-dead-letters-during-shutdown = on
}

akka.actor.remote {
  log-remote-lifecycle-events = on

  # If this is "on", Akka will log all outbound messages at DEBUG level,
  # if off then they are not logged
  log-sent-messages = on
  # If this is "on", Akka will log all inbound messages at DEBUG level,
  # if off then they are not logged
  log-received-messages = on
  # Logging of message types with payload size in bytes larger than
  # this value. Maximum detected size per message type is logged once,
  # with an increase threshold of 10%.
  # By default this feature is turned off. Activate it by setting the property to
  # a value in bytes, such as 1000b. Note that for all messages larger than this
  # limit there will be extra performance and scalability cost.
  log-frame-size-exceeding = 1000b
}

akka.actor.debug {
  # enable function of LoggingReceive, which is to log any received message
  receive = on
  # enable DEBUG logging of all AutoReceiveMessages (Kill, PoisonPill et.c.)
  autoreceive = on
  # enable DEBUG logging of actor lifecycle changes
  lifecycle = on
  # enable DEBUG logging of unhandled messages
  unhandled = on
  # enable DEBUG logging of all LoggingFSMs for events, transitions and timers
  fsm = on
  # enable DEBUG logging of subscription changes on the eventStream
  event-stream = on
}