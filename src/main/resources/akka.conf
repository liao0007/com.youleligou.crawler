unbounded-deque-based-mailbox = {
  mailbox-type = "akka.dispatch.UnboundedDequeBasedMailbox"
}

akka = {
  loggers = ["akka.event.slf4j.Slf4jLogger"]
  logging-filter = "akka.event.slf4j.Slf4jLoggingFilter"
}

akka.coordinated-shutdown {
  phases.actor-system-terminate.timeout = 60s // redis and http needs long time to shutdown
}

akka.actor = {
  //  provider = "akka.remote.RemoteActorRefProvider"

  # How long time the dispatcher will wait for new actors until it shuts down
}



akka.remote {
  enabled-transports = ["akka.remote.netty.tcp"]
  netty.tcp {
    hostname = "127.0.0.1"
    port = 2552
  }
}

akka.actor.deployment {
  "/**" {
    remote = "akka.tcp://"${appName}"@127.0.0.1:2551"
  }

  /InjectActorPool {
    router = round-robin-pool
    nr-of-instances = 1
  }
  "/InjectActorPool/*" { // inject actors
    mailbox = unbounded-deque-based-mailbox
  }
}