unbounded-deque-based-mailbox {
  mailbox-type = "akka.dispatch.UnboundedDequeBasedMailbox"
}

akka {
  # Loggers to register at boot time (akka.event.Logging$DefaultLogger logs
  # to STDOUT)
  loggers = ["akka.event.slf4j.Slf4jLogger"]

  # Log the complete configuration at INFO level when the actor system is started.
  # This is useful when you are uncertain of what configuration is used.
  //  log-config-on-start = on

  # Log level used by the configured loggers (see "loggers") as soon
  # as they have been started; before that, see "stdout-loglevel"
  # Options: OFF, ERROR, WARNING, INFO, DEBUG
  loglevel = "DEBUG"

  # Log level for the very basic logger activated during ActorSystem startup.
  # This logger prints the log messages to stdout (System.out).
  # Options: OFF, ERROR, WARNING, INFO, DEBUG
  //  stdout-loglevel = "DEBUG"

  logging-filter = "akka.event.slf4j.Slf4jLoggingFilter"
  log-dead-letters = 10
  log-dead-letters-during-shutdown = on

  actor {

    provider = "akka.cluster.ClusterActorRefProvider"

    remote {
      log-remote-lifecycle-events = off
      netty.tcp {
        hostname = "127.0.0.1"
        port = 2551
      }
      # If this is "on", Akka will log all outbound messages at DEBUG level,
      # if off then they are not logged
      log-sent-messages = on
      # If this is "on", Akka will log all inbound messages at DEBUG level,
      # if off then they are not logged
      log-received-messages = on
      # Logging of message types with payload size in bytes larger than
      # this value. Maximum detected size per message type is logged once,
      # with an increase threshold of 10%.
      # By default this feature is turned off. Activate it by setting the property to
      # a value in bytes, such as 1000b. Note that for all messages larger than this
      # limit there will be extra performance and scalability cost.
      log-frame-size-exceeding = 1000b
    }

    cluster {
      seed-nodes = [
        "akka.tcp://${appName}@127.0.0.1:2551",
        "akka.tcp://${appName}@127.0.0.1:2552"
      ]
      auto-down-unreachable-after = 10s
      metrics.enabled = off
    }

    persistence {
      journal {
        plugin = "akka.persistence.journal.leveldb-shared"
        leveldb-shared.store {
          # DO NOT USE 'native = off' IN PRODUCTION !!!
          native = off
          dir = "target/shared-journal"
        }
      }
      snapshot-store {
        plugin = "akka.persistence.snapshot-store.local"
        local.dir = "target/snapshots"
      }
      snapshot-store.plugin = "akka.persistence.snapshot-store.local"
      snapshot-store.local.dir = "target/snapshots"
    }

    debug {
      # enable DEBUG logging of all AutoReceiveMessages (Kill, PoisonPill et.c.)
      autoreceive = on
      # enable DEBUG logging of actor lifecycle changes
      lifecycle = on
      # enable DEBUG logging of unhandled messages
      unhandled = on
      # enable DEBUG logging of all LoggingFSMs for events, transitions and timers
      fsm = on
      # enable DEBUG logging of subscription changes on the eventStream
      event-stream = on
    }
  }
}