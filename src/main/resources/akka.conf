unbounded-deque-based-mailbox = {
  mailbox-type = "akka.dispatch.UnboundedDequeBasedMailbox"
}

akka {
  loggers = ["akka.event.slf4j.Slf4jLogger"]
  logging-filter = "akka.event.slf4j.Slf4jLoggingFilter"
}

akka.actor.remote = {
  netty.tcp {
    hostname = "127.0.0.1"
    port = 2551
  }
}

akka.actor.cluster = {
  seed-nodes = [
    "akka.tcp://${appName}@127.0.0.1:2551",
    "akka.tcp://${appName}@127.0.0.1:2552"
  ]
  auto-down-unreachable-after = 10s
  metrics.enabled = off
}

akka.actor.persistence = {
  journal {
    plugin = "akka.persistence.journal.leveldb-shared"
    leveldb-shared.store {
      # DO NOT USE 'native = off' IN PRODUCTION !!!
      native = off
      dir = "target/shared-journal"
    }
  }
  snapshot-store {
    plugin = "akka.persistence.snapshot-store.local"
    local.dir = "target/snapshots"
  }
  snapshot-store.plugin = "akka.persistence.snapshot-store.local"
  snapshot-store.local.dir = "target/snapshots"
}

akka.actor.deployment {
  "/**" {
    remote = "akka.tcp://$appName@127.0.0.1:2551"
  }

  #Common Actors
  /CountActorPool {
    router = round-robin-pool
    nr-of-instances = 1
  }

  /IndexActorPool {
    router = round-robin-pool
    nr-of-instances = 1
  }

  /ProxyAssistantActorPool {
    router = round-robin-pool
    nr-of-instances = 1
  }

  #XiCiDaiLi
  /XiCiDaiLiProxyListInjectActorPool {
    router = round-robin-pool
    nr-of-instances = 2
  }
  "/XiCiDaiLiProxyListInjectActorPool/*" { // inject actors
    mailbox = unbounded-deque-based-mailbox
  }
  "/XiCiDaiLiProxyListInjectActorPool/*/*" { // fetch actor
    mailbox = unbounded-deque-based-mailbox
  }

  #Eleme
  /ElemeRestaurantInjectActorPool {
    router = round-robin-pool
    nr-of-instances = 5
  }
  "/ElemeRestaurantInjectActorPool/*" { // inject actors
    mailbox = unbounded-deque-based-mailbox
  }
  "/ElemeRestaurantInjectActorPool/*/*" { // fetch actor
    mailbox = unbounded-deque-based-mailbox
  }
}